#!/usr/bin/env python
import dehaze
import multiprocessing as mp
import glob
import util as U
import dehaze
import os
from os.path import dirname
from matplotlib import pyplot as plt
import numpy as np


if __name__ == "__main__":
    #  fps_healthy = glob.glob('./data/messidor_healthy/*/*')
    #  fps_grade3 = glob.glob('./data/messidor_grade3/*/*')
    #  fps_grade2 = glob.glob('./data/messidor_grade2/*/*')
    #  fps_grade1 = glob.glob('./data/messidor_grade1/*/*')

    fps = glob.glob('./data/messidor/*/*.tif')
    def job(fp):
        fpout = fp.replace('messidor', 'messidor_dehazed')
        print(fpout)
        os.makedirs(dirname(fpout), exist_ok=True)
        if os.path.exists(fpout):
            return
        d, d2 = dehaze.illuminate_from_fp(fp)

        # save img.
        # compare this nice simple
        plt.imsave(fpout, d2['radiance'].clip(0, 1))

        # to this
        #  img_out = U.fromnp((d2['radiance'].T * 255).astype('uint8').clip(0, 255))
        #  [(x.GetSize()) for x in [img_in, img_out]]
        #  U.save_img(fpout.replace('.tif', '.png'), img_out)  # saves grayscale

        # and this
        #  img_in = U.read_img(fp)
        #  img_out = U.fromnp((d2['radiance'].clip(0, 1).T*255).astype('uint8'))
        #  U.save_img(fpout, img_out)  # multiple grayscale documents (one per
        #  channel) which does not play nicely with my other tools.

    #  job(fps[0])
    for fp in fps:
        job(fp)
    #  with mp.Pool(12) as pool:
        #  pool.map(job, fps)
